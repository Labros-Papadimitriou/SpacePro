@model dynamic

<style>
    .myBtns {
        margin: 10px 0 30px 0;
        padding: 5px;
        display: flex;
        justify-content: space-evenly;
    }

    .btn {
        padding: 8px 10px;
        margin: 5px 0 5px 0;
        font-size: 14px;
    }

        .btn:nth-child(4) {
            background-color: whitesmoke;
            color: black;
        }

        .btn:hover,
        .btn:focus,
        .btn:active {
            background-color: whitesmoke;
            color: black;
        }
</style>

<div class="myBtns">
    <a class="btn btn-dark" href="/Dashboard/UserRoles">User Roles</a>
    <a class="btn btn-dark" href="/Dashboard/ArticlesLikes">Articles Likes</a>
    <a class="btn btn-dark" href="/Dashboard/PostLikes">Post Likes</a>
    <a class="btn btn-dark" href="#">User Likes</a>
    <a class="btn btn-dark" href="/Dashboard/PlanetsStats">Planets Stats</a>
    <a class="btn btn-dark" href="/Dashboard/MoonsStats">Moons Stats</a>
    <a class="btn btn-dark" href="/Dashboard/AsteroidsStats">Asteroids Stats</a>
</div>

<div class="chart-container" style="position: absolute; left:15%; height:40vh; width:75vw">
    <canvas id="myChart"></canvas>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>



    let users = [];
    let likes = [];

    let distUsers = [];
    let distLikes = [];

    @foreach (var userName in Model.UserName)
    {
         @: users.push("@userName");
    }


    @foreach (var likes in Model.PostsLikes)
    {
        @: likes.push(@likes)
    }


    for (var i = 0; i < users.length; i++) {

        if (!distUsers.includes(users[i])) {
            distUsers.push(users[i]);
            distLikes.push(likes[i]);
        }
        else {
            distLikes[distUsers.indexOf(users[i])] += likes[i];
        }
    }



    const data = {
        labels: distUsers,

        datasets: [
            {
            label: 'User Likes',

                data: distLikes,

            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(255, 159, 64, 0.2)',
                'rgba(255, 205, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(201, 203, 207, 0.2)'
            ],
            borderColor: [
                'rgb(255, 99, 132)',
                'rgb(255, 159, 64)',
                'rgb(255, 205, 86)',
                'rgb(75, 192, 192)',
                'rgb(54, 162, 235)',
                'rgb(153, 102, 255)',
                'rgb(201, 203, 207)'
            ],
            borderWidth: 1
            }
        ]
    };

    const config = {
        type: 'bar',
        data: data,
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        },
    };

</script>
<script>
    const myChart = new Chart(
        document.getElementById('myChart'),
        config
    );
</script>