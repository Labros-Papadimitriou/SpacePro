@model Entities.IdentityUsers.ApplicationUser

<style>

    .chat-header {
        font-size: 20px;
    }

    textarea {
        background-color: #808080;
        border-radius: 5px;
        height: 50px;
        resize: none;
        border: none;
        outline: none;
        font-size: 18px;
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
        cursor: pointer;
    }

    .chat-box {
        background-color: #242424;
        border-radius: 5px;
        -webkit-box-shadow: 1px 1px 1px 1px rgba(143,143,143,0.62);
        box-shadow: 1px 1px 1px 1px rgba(143,143,143,0.62);
    }

    img {
        width: 40px;
        height: 40px;
        margin: 10px 10px 10px 0px;
    }

    .bullet {
        margin: 0px 3px;
        color: #808080;
    }
</style>

<div style="margin:50px auto; width:50%">
    <div class="message-div">
        <div class="row chat-header" style="text-align:center">
            <h2 class="fa fa-comment">&ensp; Discourse</h2>
        </div>
        <div class="row chat-input">
            <textarea id="message"></textarea>
            <input type="button" id="sendmessage" value="Send" class="btn btn-github" style="border-radius:5px" />
            <input type="hidden" id="displayname" />
        </div>
        <div class="row chat-box">
        </div>
    </div>
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->

    <script>
        $(document).ready(function () {
            var settings = {
                "url": "/ChatMessage/GetAllChatMessages",
                "method": "GET",
                "timeout": 0,
            };

            $.ajax(settings).done(function (response) {
                for (let i = 0; i < response.length; i++) {
                    $(".chat-box").prepend(response[i].MessageBox);
                }
            });
        })
    </script>

    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            let chat = $.connection.chatHub;

            let template = `
                                <div class="chat-div">
                                    <img src="" alt="No Image" />
                                    <span class="name"></span>
                                    <span class="bullet">&#8226;</span>
                                    <span class="time"></span><br />
                                    <div class="discussion" style="margin-left:55px; padding-right:50px; display:inline-block" class="col">
                                    </div>
                                    <hr />
                                </div>
                            `;

            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (id, name, message, userImage) {
                // Add the message to the page.
                if (message) {

                    let ele = $(template);

                    ele.find('.time').html(new Date().toUTCString().replace("GMT", ""));
                    ele.find('.name').html(htmlEncode(name));
                    ele.find('.discussion').html(htmlEncode(message));
                    ele.find('img').attr("src", userImage);
                    $(".chat-box").prepend(ele);

                    if (id == '@Model.Id') {
                        let newMessage = $(".chat-box").find('.chat-div').html();
                        let temp = `<div class="chat-div">${newMessage}</div>`;

                        var settings = {
                            "url": "/ChatMessage/CreateChatMessage",
                            "method": "POST",
                            "timeout": 0,
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "data": JSON.stringify({
                                "newMessage": temp
                            }),
                        };
                        $.ajax(settings).done(function (response) {
                            console.log(response);
                        });
                    }
                    
                }
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val("@User.Identity.Name");
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.

                    chat.server.send('@Model.Id', $('#displayname').val(), $('#message').val(), '@Model.UserImage.Url');
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();

                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            let encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
