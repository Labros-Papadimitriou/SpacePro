@model Entities.IdentityUsers.ApplicationUser
@{
    ViewBag.Title = "EditProfile";
    Layout = "~/Views/Shared/_LayoutSpace.cshtml";
}
<style>
    .date .form-control {
        background-color: lightgrey;
        color: black
    }

    .card {
        background: linear-gradient(to left, #0c092ef2, black 80%);
        box-shadow: rgb(55, 55, 55) 3px 3px 4px 3px;
    }

    input.form-control.date {
        color: white !important;
        background: linear-gradient(to right,black 90%,#b0aeae) !important;
        border-left: none !important;
    }
</style>

<!--app-content open-->
<div class="main-content app-content mt-0">
    <div class="side-app">

        <!-- CONTAINER -->
        <div class="main-container container-fluid">

            <!--Delete Account Modal Starts-->
            <div class="modal" id="deleteAccountModal" aria-labelledby="deleteAccountModalLabel" tabindex="-1" role="dialog" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Are you sure you want to delete your Account?</h5>
                            <button type="button" class="close btn btn-danger" data-bs-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
                            {

                                @Html.AntiForgeryToken()
                                <div class="card-header">
                                    <div class="card-title">Delete Account</div>
                                </div>
                                <div class="card-footer text-start">
                                    <input hidden type="text" name="id" value="@Model.Id" />
                                    <input onclick="DeleteUserAccount()" type="submit" value="Delete Account" class="btn btn-danger my-1" />
                                </div>
                            }

                            @*@if (Request.IsAuthenticated)
                                {
                                    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div class="card-header">
                                            <div class="card-title">Delete Account</div>
                                        </div>
                                        <div class="card-footer text-start">
                                            <input hidden type="text" name="id" value="@Model.Id" />
                                            <input type="submit" value="Delete Account" class="btn btn-danger my-1" />
                                        </div>
                                    }
                                }*@
                        </div>
                    </div>
                </div>
            </div>
            <!--Delete Account Modal Ends -->
            <!--Delete Post Modal Starts-->
            <div class="modal" id="deletePostModal" aria-labelledby="deletePostModalLabel" tabindex="-1" role="dialog" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Are you sure you want to delete this post</h5>
                            <button type="button" class="close btn btn-danger" data-bs-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p class="header" id="postDetailsModal"></p>
                            <br />
                            <button id="delBtn" data-bs-dismiss="modal" class="btn btn-danger">Delete Post</button>
                            <button data-bs-dismiss="modal" class="btn btn-primary">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
            <!--Delete Post Modal Ends -->
            <!--Edit Modal Starts-->
            <div class="modal" id="editPostModal" aria-labelledby="editPostModalLabel" tabindex="-1" role="dialog" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Edit Post</h5>
                            <button type="button" class="close btn btn-danger" data-bs-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="header" id="postDetailsEditModal"></div>
                            <br />
                            <button id="saveEditBtn" data-bs-dismiss="modal" class="btn btn-danger">Edit Post</button>
                            <button data-bs-dismiss="modal" class="btn btn-primary">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
            <!--Edit Modal Ends -->
            <!-- PAGE-HEADER -->
            <div class="page-header">
                <h1 class="page-title">Edit Profile</h1>
                <div>
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/AppUser/UserProfile">View Profile</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Edit Profile</li>
                    </ol>
                </div>
            </div>
            <!-- PAGE-HEADER END -->
            <!-- ROW-1 OPEN EDIT PROFILE/EDIT PASSWORD-->
            <div class="row">
                <div class="col-lg-4">
                    @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div class="card">
                            <div class="card-header">
                                <div class="card-title">Edit Password</div>
                            </div>
                            @Html.ValidationSummary("", new { @class = "text-danger" })
                            <div class="card-body">
                                <div class="text-center chat-image mb-5">
                                    <div class="main-chat-msg-name">
                                        <a href="profile.html">
                                            <h5 class="mb-1 text-dark fw-semibold">@Model.UserName</h5>
                                        </a>
                                        <p class="text-muted mt-0 mb-0 pt-0 fs-13">@Model.Work</p>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Current Password</label>
                                    <div class="wrap-input100 validate-input input-group" id="Password-toggle">
                                        @Html.AntiForgeryToken()
                                        <a href="#" class="input-group-text bg-white text-muted">
                                            <i class="zmdi zmdi-eye text-muted" aria-hidden="true"></i>
                                        </a>
                                        <input id="curPass" class="input100 form-control" name="OldPassword" type="password" value="" placeholder="Current Password" minlength="6" required>
                                    </div>
                                    <!-- <input type="password" class="form-control" value="password"> -->
                                </div>
                                <div class="form-group">
                                    <label class="form-label">New Password</label>
                                    <div class="wrap-input100 validate-input input-group" id="Password-toggle1">
                                        <a href="#" class="input-group-text bg-white text-muted">
                                            <i class="zmdi zmdi-eye text-muted" aria-hidden="true"></i>
                                        </a>
                                        <input id="newPass" class="input100 form-control" name="NewPassword" type="password" value="" placeholder="New Password" minlength="6" required>
                                    </div>
                                    <!-- <input type="password" class="form-control" value="password"> -->
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Confirm Password</label>
                                    <div class="wrap-input100 validate-input input-group" id="Password-toggle2">
                                        <a href="#" class="input-group-text bg-white text-muted">
                                            <i class="zmdi zmdi-eye text-muted" aria-hidden="true"></i>
                                        </a>
                                        <input id="conPass" class="input100 form-control" name="ConfirmPassword" type="password" value="" placeholder="Confirm Password" minlength="6" required>
                                    </div>
                                    <!-- <input type="password" class="form-control" value="password"> -->
                                </div>
                            </div>
                            <div class="card-footer text-end">
                                <button id="updPass" class="btn btn-success" type="submit" value="Change Password">Update Password</button>
                                <a href="#" class="btn btn-danger">Cancel</a>
                            </div>
                        </div>
                    }
                    <div class="card">

                        <div class="card-header">
                            <div class="card-title">Manage Account</div>
                        </div>
                        <div class="card-footer text-start">
                            <a href="/Manage/Index" class="btn btn-secondary my-1">Manage Account</a>
                        </div>
                        <div class="card-footer text-start">
                            <button data-bs-toggle="modal" data-bs-target="#deleteAccountModal" class="btn btn-danger my-1">Delete Account</button>
                        </div>
                    </div>
                    <div class="card">
                        <h3>Subscribe in our Newsletter</h3>
                        <form action="/News/AddListener" method="get">
                            <label class="radio-inline" for="addInNewsYes">Yes <input id="addInNewsYes" type="radio" name="addInNews" value="yes" /></label>
                            <label class="radio-inline" for="addInNewsNo">No <input id="addInNewsNo" type="radio" name="addInNews" value="no" /></label>
                            <input style="float:right" class="btn btn-outline-success" type="submit" value="Submit" />
                        </form>
                    </div>

                </div>

                <div class="col-xl-8">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Edit Profile</h3>
                        </div>
                        @using (Html.BeginForm("EditProfile", "AppUser", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-lg-6 col-md-12">
                                        <div class="form-group">
                                            <label for="exampleInputname">First Name</label>
                                            <input name="FirstName" type="text" class="form-control" id="exampleInputname" placeholder="First Name" value="@Model.FirstName">
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-12">
                                        <div class="form-group">
                                            <label for="exampleInputname1">Last Name</label>
                                            <input name="LastName" type="text" class="form-control" id="exampleInputname1" placeholder="Enter Last Name" value="@Model.LastName">
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="exampleInputEmail1">Email address</label>
                                    <input name="Email" type="email" class="form-control" id="exampleInputEmail1" placeholder="Email address" value="@Model.Email">
                                </div>
                                <div class="form-group">
                                    <label for="exampleInputnumber">Contact Number</label>
                                    <input name="PhoneNumber" type="number" class="form-control" id="exampleInputnumber" placeholder="Contact number" value="@Model.PhoneNumber">
                                </div>
                                <div class="form-group">
                                    <label class="form-label">About Me</label>
                                    <textarea name="AboutMe" class="form-control" rows="6">@Model.AboutMe</textarea>
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Work</label>
                                    <input name="Work" class="form-control" rows="6" value="@Model.Work">
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Education</label>
                                    <input name="Education" class="form-control" rows="6" value="@Model.Education">
                                </div>
                                <div class="form-group date">
                                    <label>Date Of Birth</label>
                                    @if (@Model.DateOfBirth == null)
                                    {
                                        <input type="date" class="form-control date" name="DateOfBirth" value="" />
                                    }
                                    else
                                    {
                                        <input type="date" class="form-control date" name="DateOfBirth" value="@String.Join("-", Model.DateOfBirth.Value.ToShortDateString().Split('/').Select(x=>x.Length==1?"0"+x:x).Reverse())" />

                                    }
                                </div>
                            </div>
                            <div class="card-footer text-end">
                                <button type="submit" class="btn btn-success my-1">Save</button>
                                <a href="#" class="btn btn-danger my-1">Cancel</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <!-- ROW-1 CLOSED -->
            <!-- ROW-2 DataTable with Posts Starts -->
            <div class="row">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Edit Posts</h3>
                    </div>
                    <table id="bodiesTable" class="table table-bordered align-content-center">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Post Details</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
            <!-- ROW-2 CLOSED -->

        </div>
        <!--CONTAINER CLOSED -->
    </div>
</div>
@section scripts{

    @* DATATABLE *@
    <script type="text/javascript">

        openDataTable();
        function openDataTable() {
            $('#bodiesTable').DataTable({
                ajax: {
                    url: "/UserPost/GetPosts?id=@Model.Id",
                    type: "GET",
                    dataType: "json"
                },
                columns: [
                    {
                        data: "UserPostId"
                    },
                    {
                        data: "PostDetails"
                    },
                    {
                        data: "UserPostId", render: function (UserPostId) {

                            let template = `
                                                      <button class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#editPostModal" onclick="MyEdit(${UserPostId})" >Edit</button>
                                                      <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deletePostModal" onclick="MyDelete(${UserPostId})">Delete</button>
                                                   `;

                            return template;
                        }
                    }

                ]

            })
        }

        function reloadDataTable() {
            $('#bodiesTable').DataTable().ajax.reload();
        }

    </script>

    @* EDIT DELETE *@
    <script type="text/javascript">

        function MyDelete(UserPostId) {

            var settings = {
                "url": "/UserPost/GetPost?" + "UserPostId=" + UserPostId,
                "method": "GET",
                "timeout": 0,
            };

            $.ajax(settings).done(function (response) {

                $("#postDetailsModal").text(`"` + response.data.PostDetails + `"`);
            });

            $("#delBtn").click(function () {

                let RequestCls = {
                    id: UserPostId
                }

                var settings = {
                    "url": "/Userpost/deletepost",
                    "method": "POST",
                    "timeout": 0,
                    "headers": {
                        "Content-Type": "application/json"
                    },
                    "data": JSON.stringify(RequestCls),
                };

                $.ajax(settings).done(function (response) {
                    UserPostId = 0;
                    reloadDataTable();
                });
            })
        }

        function MyEdit(UserPostId) {

            var settings = {
                "url": "/UserPost/GetPost?" + "UserPostId=" + UserPostId,
                "method": "GET",
                "timeout": 0,
            };

            $.ajax(settings).done(function (response) {

                $("#postDetailsEditModal").text(response.data.PostDetails).attr('contenteditable', "true").css("background-color", "#3e3d3dcc");
            });

            $("#saveEditBtn").click(function () {

                let RequestCls = {
                    id: UserPostId,
                    postDetails: $("#postDetailsEditModal").text()
                }

                var settings = {
                    "url": "/Userpost/EditPost",
                    "method": "POST",
                    "timeout": 0,
                    "headers": {
                        "Content-Type": "application/json"
                    },
                    "data": JSON.stringify(RequestCls),
                };

                $.ajax(settings).done(function (response) {
                    UserPostId = 0;
                    reloadDataTable();
                });
            })
        }

        function DeleteUserAccount() {
            console.log("ko");
            var settings = {
                "url": "/AppUser/DeleteUser",
                "method": "POST",
                "timeout": 0,
                "headers": {
                    "Content-Type": "application/json"
                },
                "data": JSON.stringify({
                    "id": "@Model.Id"
                }),
            };

            $.ajax(settings).done(function (response) {
                console.log(response);
            });
        }

    </script>

}